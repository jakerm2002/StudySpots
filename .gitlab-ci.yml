stages:
  - build
  - test

build-job:
  stage: build
  image: node:18
  script:
    - echo "cd into the frontend directory"
    - cd frontend
    - echo "install the node_modules"
    - npm install
    - echo "build the app"
    - npm run-script build
    - echo "build was successful!"

jest_tests:
  stage: test
  image: node:18
  script:
    - cd frontend
    - npm install
    - npm test

selenium_tests:
  stage: test
  image: python:3.8.2
  services:
    - selenium/standalone-chrome
  script:
    - python3 -m pip install selenium
    - python3 -m pip install unittest2
    - python3 -m pip install webdriver_manager
    - apt-get update -q -y
    - apt-get install nodejs npm -y
    - apt-get --yes install libnss3
    - apt-get --yes install libgconf-2-4
    - apt-get install libx11-xcb1
    - curl -sS -L https://dl.google.com/linux/linux_signing_key.pub |
      apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - apt-get update -q -y
    - apt-get install -y google-chrome-stable
    - python3 frontend/guitests.py

backend_tests:
  stage: test
  image: python:3.6-stretch
  before_script:
    - pip install -r backend/requirements.txt
    - pip install google-search-results
    - pip install black
  script:
    - cd backend
    - python3 tests.py
    - black *.py
    - cd database
    - black *.py

postman_test:
  stage: test
  image:
    name: postman/newman_alpine33
    entrypoint: [""]
  script:
    - cd backend
    - newman run Postman.json